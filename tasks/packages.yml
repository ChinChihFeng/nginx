---
- name: Download PCRE library from the Internet {{ pcre_version }}
  get_url:
    url: https://ftp.pcre.org/pub/pcre/pcre-{{ pcre_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}/pcre-{{ pcre_version }}.tar.gz"
    mode: 0755
  tags:
    - package

- name: Unarchive PCRE
  unarchive:
    src: "{{ nginx_temp_installation }}/pcre-{{ pcre_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download CloudFlare zlib from the Internet {{ cloudflare_zlib_version }}
  get_url:
    url: https://github.com/cloudflare/zlib/archive/v{{ cloudflare_zlib_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}/v{{ cloudflare_zlib_version }}.tar.gz"
    mode: 0755
  tags:
    - package

- name: Unarchive CloudFlare zlib
  unarchive:
    src: "{{ nginx_temp_installation }}/v{{ cloudflare_zlib_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download Openssl tarball {{ openssl_version }}
  get_url:
    url: https://www.openssl.org/source/openssl-{{ openssl_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package

- name: Untar Openssl source package
  unarchive:
    src: "{{ nginx_temp_installation }}/openssl-{{ openssl_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package
   
- name: Download LuaJIT package {{ LuaJIT_version }}
  get_url:
    url: https://github.com/openresty/luajit2/archive/v{{ LuaJIT_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package   

- name: Untar LuaJIT source package
  unarchive:
    src: "{{ nginx_temp_installation }}/luajit2-{{ LuaJIT_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Compile LuaJIT from source
  shell: |
    make -j
    make install PREFIX={{ LuaJIT_path }}
  args:
    chdir: "{{ nginx_temp_installation }}/luajit2-{{ LuaJIT_version }}"
  tags:
    - package

- name: Download ndk package {{ ndk_version }}
  get_url:
    url: https://github.com/simpl/ngx_devel_kit/archive/v{{ ndk_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package

- name: Untar ndk source package
  unarchive:
    src: "{{ nginx_temp_installation }}/ngx_devel_kit-{{ ndk_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download lua-nginx-module package {{ lua_ngx_version }}
  get_url:
    url: https://github.com/openresty/lua-nginx-module/archive/v{{ lua_ngx_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package

- name: Untar lua-nginx-module source package
  unarchive:
    src: "{{ nginx_temp_installation }}/lua-nginx-module-{{ lua_ngx_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download headers more package {{ headers_more_version }}
  get_url:
    url: https://github.com/openresty/headers-more-nginx-module/archive/v{{ headers_more_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package

- name: Untar haeders more source package
  unarchive:
    src: "{{ nginx_temp_installation }}/headers-more-nginx-module-{{ headers_more_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download nginx vts package {{ vts_version }}
  get_url:
    url: https://github.com/vozlt/nginx-module-vts/archive/v{{ vts_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}"
  tags:
    - package

- name: Untar nginx vts source package
  unarchive:
    src: "{{ nginx_temp_installation }}/nginx-module-vts-{{ vts_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Download nginx sticky package {{ vts_version }}
  get_url:
    url: https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/{{ sticky_version }}.tar.gz
    dest: "{{ nginx_temp_installation }}/nginx-sticky-module-ng-{{ sticky_version }}.tar.gz"
  tags:
    - package

- name: Untar nginx sticky source package
  unarchive:
    src: "{{ nginx_temp_installation }}/nginx-sticky-module-ng-{{ sticky_version }}.tar.gz"
    dest: "{{ nginx_temp_installation }}"
    remote_src: yes
  tags:
    - package

- name: Find sticky directory which is named
  find:
    paths: "{{ nginx_temp_installation }}"
    patterns: "nginx-goodies-nginx-sticky-module-ng-*"
    file_type: directory
  register: find_sticky
  tags:
    - package

- name: Insert two lines into the source code properly
  blockinfile:
    path: "{{ item.path}}/ngx_http_sticky_misc.c"
    insertafter: '#include <ngx_sha1.h>'
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    content: |
      #include <openssl/sha.h>
      #include <openssl/md5.h>
  with_items: "{{ find_sticky.files }}"
