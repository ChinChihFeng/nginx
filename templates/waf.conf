access_by_lua_block {
                local lua_resty_waf = require "waf"
                local waf = lua_resty_waf:new()

                -- define options that will be inherited across all scopes
                waf:set_option("debug", false)
                waf:set_option("mode", "SIMULATE")
                waf:set_option("res_tid_header", true)
                waf:set_option("allowed_content_types", { "text/html", "text/json", "application/json","application/json;charset=UTF-8" })
                waf:set_option("event_log_target", "file")
                waf:set_option("event_log_target_path", "{{ nginx_path }}/logs/waf.log")
                
                -- this may be desirable for low-traffic or testing sites
                -- by default, event logs are not written until the buffer is full
                -- for testing, flush the log buffer every 5 seconds
                --
                -- this is only necessary when configuring a remote TCP/UDP
                -- socket server for event logs. otherwise, this is ignored
                waf:set_option("event_log_periodic_flush", 5)
                waf:exec()
                waf:write_log_events()
            }

            header_filter_by_lua_block {
                local lua_resty_waf = require "waf"
                local waf = lua_resty_waf:new()
                waf:exec()
            }

            body_filter_by_lua_block {
                local lua_resty_waf = require "waf"
                local waf = lua_resty_waf:new()
                waf:exec()
            }

            log_by_lua_block {
                local lua_resty_waf = require "waf"
                local waf = lua_resty_waf:new()
                waf:exec()
            }

